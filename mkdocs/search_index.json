{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-mkdocs", 
            "text": "For full documentation visit  mkdocs.org .", 
            "title": "Welcome to MkDocs"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/", 
            "text": "\u706b\u7535\u8131\u785d\u6548\u7387\u56de\u5f52\u5206\u6790\n\n\n\u673a\u7ec4\u8131\u785d\u6d4b\u70b9\u6570\u636e \u76f8\u5173\u6027\u5206\u6790\n\n\n\u591a\u5143\u56de\u5f52\u5efa\u6a21\n\n\n\u52a0\u8f7dR\u76f8\u5173\u5305\n\n\nlibrary(opentsdbr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(magrittr)\nlibrary(corrplot)\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(TTR)\n\n\n\n\nLoading required package: stringr\nLoading required package: httr\nLoading required package: rjson\nLoading required package: lubridate\n\nAttaching package: \u2018lubridate\u2019\n\nThe following object is masked from \u2018package:base\u2019:\n\n    date\n\nLoading required package: data.table\n\nAttaching package: \u2018data.table\u2019\n\nThe following objects are masked from \u2018package:lubridate\u2019:\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n\n\nAttaching package: \u2018dplyr\u2019\n\nThe following objects are masked from \u2018package:data.table\u2019:\n\n    between, first, last\n\nThe following objects are masked from \u2018package:lubridate\u2019:\n\n    intersect, setdiff, union\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    filter, lag\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    intersect, setdiff, setequal, union\n\n\nAttaching package: \u2018magrittr\u2019\n\nThe following object is masked from \u2018package:tidyr\u2019:\n\n    extract\n\ncorrplot 0.84 loaded\n\nAttaching package: \u2018reshape2\u2019\n\nThe following object is masked from \u2018package:tidyr\u2019:\n\n    smiths\n\nThe following objects are masked from \u2018package:data.table\u2019:\n\n    dcast, melt\n\n\n\n\u6307\u5b9a\u5206\u6790\u65f6\u6bb5\n\n\ninter \n- interval(ymd_hms(\n2014-01-01 00:00:00\n), ymd_hms(\n2018-08-01 11:59:59\n))\n\n\n\n\n\u53c2\u8003\u4e1a\u52a1\u4e0a\u5b9a\u4e49\u768432\u673a\u7ec4\u91cd\u70b9\u6d4b\u70b9(A\u6d4b)\n\n\ntagcodes_32 \n- as.list(c(\n  '08ksci008_2a', #\u673a\u7ec4\u8d1f\u8377\n  'unitcoalflo_2a', #\u673a\u7ec4\u603b\u7164\u91cf\n  #'2coalbsavg_c', #\u53d1\u7535\u7164\u8017\n  '08fsaeu60c_2a', #\u4e00\u6b21\u98ce\u6e29\u5ea6\n  '08frate76d_2a', #A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29\n  '08hsa10cq101b_2a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf\n  #'08ascr_nox_set_2a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\u8bbe\u5b9a\n  #'08ascr_xl_set_2a', #A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\u8bbe\u5b9a\n  '08bakai001_2a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf\n  '08xiaolva_2a', #A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\n  '08bakai008_2a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx\n  '08bakai006_2a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\n  '08hsa10cq105_2a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038\n  '08hsd10dp101_2a', #A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee\n  #'33hta00cq004_t1a', #\u51fa\u53e3\u70df\u5c18\u6d53\u5ea6\n  '08ftaan001xb13_2a' #\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41\n  #'33fgd2rtu-ao3_t1a' #\u5165\u53e3\u70df\u6c14\u91cf\n))\n\n\n\n\n\u53c2\u8003\u4e1a\u52a1\u4e0a\u5b9a\u4e49\u768431\u673a\u7ec4\u91cd\u70b9\u6d4b\u70b9(A\u6d4b)\n\n\ntagcodes_31 \n- as.list(c(\n  '07gevji001_c18_1a', #\u673a\u7ec4\u8d1f\u8377\n  'unitcoalflo_1a', #\u673a\u7ec4\u603b\u7164\u91cf\n  #'1coalbsavg_c', #\u53d1\u7535\u7164\u8017\n  '07fsaeu60c_1a', #\u4e00\u6b21\u98ce\u6e29\u5ea6\n  '07frate76d_1a', #A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29\n  '07hsa10cq101b_1a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf\n  #'07ascr_nox_set_1a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\u8bbe\u5b9a\n  #'07ascr_xl_set_1a', #A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\u8bbe\u5b9a\n  '07bakai001_1a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf\n  '07xiaolva_1a', #A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\n  '07bakai008_1a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx\n  '07bakai006_1a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\n  '07hsa10cq105_1a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038\n  '07hsd10dp101_1a', #A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee\n  #'33hta00cq004_t1a', #\u51fa\u53e3\u70df\u5c18\u6d53\u5ea6\n  '07ftaan001xb13_1a' #\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41\n  #'33fgd2rtu-ao3_t1a' #\u5165\u53e3\u70df\u6c14\u91cf\n))\n\n\n\n\n\u5b9a\u4e49\u83b7\u53d6\u6d4b\u70b9\u6570\u636e\u51fd\u6570\n\n\nget_tag_info_from_opentsdb \n- function(code,ag,ds,hs='1.85.6.157',port=14242){\n  result \n- try(tsd_get(metric = code,inter,agg=ag,hostname = hs ,port=port,downsample = ds))\n  if ('try-error' %in% class(result)) {\n    message(\n\u6d4b\u70b9\uff1a\n,code,\n \u65e0\u6570\u636e\n)\n    # \u90e8\u5206\u6d4b\u70b9\u6570\u636e\u4e3a\u7a7a\n    return(NULL)\n  }else{\n    # \u884c\u5217\u8f6c\u6362\n    tmp \n- dcast(result[,1:3],timestamp~metric)\n    return(tmp)\n  }\n}\n\n\n\n\n\u8bfb\u53d632\u673a\u7ec4\u6d4b\u70b9\u6570\u636e\n\n\ntagdata_32 \n- lapply(tagcodes_32,\n                     get_tag_info_from_opentsdb,\n                     ag='zimsum',\n                     ds \n- '1h-avg-zero',\n                     hs='cdh-2')\n\n\n\n\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nWarning message in `[\n-.data.frame`(`*tmp*`, , tag_names, value = list(structure(1L, .Label = \"jydc\", class = \"factor\"), :\n\u201cprovided 40164 variables to replace 1 variables\u201d\n\n\n\n\u8bfb\u53d631\u673a\u7ec4\u6d4b\u70b9\u6570\u636e\n\n\ntagdata_31 \n- lapply(tagcodes_31,\n                     get_tag_info_from_opentsdb,\n                     ag='zimsum',\n                     ds \n- '1h-avg-zero',\n                     hs='cdh-2')\n\n\n\n\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nWarning message in `[\n-.data.frame`(`*tmp*`, , tag_names, value = list(structure(1L, .Label = \"jydc\", class = \"factor\"), :\n\u201cprovided 40164 variables to replace 1 variables\u201dNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nWarning message in `[\n-.data.frame`(`*tmp*`, , tag_names, value = list(structure(1L, .Label = \"jydc\", class = \"factor\"), :\n\u201cprovided 40164 variables to replace 1 variables\u201dNo encoding supplied: defaulting to UTF-8.\nWarning message in `[\n-.data.frame`(`*tmp*`, , tag_names, value = list(structure(1L, .Label = \"jydc\", class = \"factor\"), :\n\u201cprovided 40164 variables to replace 1 variables\u201dNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\n\n\n\n\u5c06\u4eceopentsdb\u4e2d\u7684\u6d4b\u70b9\u5217\u8868\u6570\u636e \u8f6c\u5316\u6210 dataframe \u6570\u636e\u6846\u683c\u5f0f\n\n\ndf_tagdata_32 \n- reshape::merge_recurse(tagdata_32);\ndf_tagdata_31 \n- reshape::merge_recurse(tagdata_31)\n\n\n\n\n\u5c06\u6d4b\u70b9\u7f16\u7801\u8f6c\u6362\u6210\u6d4b\u70b9\u540d\u79f0\n\n\ntag_names_cn \n- c('\u673a\u7ec4\u8d1f\u8377',\n                  '\u673a\u7ec4\u603b\u7164\u91cf',\n                  #'\u53d1\u7535\u7164\u8017',\n                  '\u4e00\u6b21\u98ce\u6e29\u5ea6',\n                  'A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29',\n                  'A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf',\n                  #'A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\u8bbe\u5b9a',\n                  #'A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\u8bbe\u5b9a',\n                  'A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf',\n                  'A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387',\n                  'A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx',\n                  'A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx',\n                  'A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038',\n                  'A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee',\n                  #'\u51fa\u53e3\u70df\u5c18\u6d53\u5ea6',\n                  '\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41'\n                  #,'\u5165\u53e3\u70df\u6c14\u91cf'\n                  )\nnames(df_tagdata_32)[-1] \n- tag_names_cn\nnames(df_tagdata_31)[-1] \n- tag_names_cn\n\n\n\n\n\u6570\u636e\u6846\u63cf\u8ff0\u6027\u7edf\u8ba1\n\n\nsummary(df_tagdata_32)\n\n\n\n\n   timestamp                      \u673a\u7ec4\u8d1f\u8377     \u673a\u7ec4\u603b\u7164\u91cf    \u4e00\u6b21\u98ce\u6e29\u5ea6 \n Min.   :2014-01-01 00:00:00   Min.   : -1   Min.   :  0   Min.   :  0  \n 1st Qu.:2015-02-23 08:45:00   1st Qu.:  0   1st Qu.:  0   1st Qu.: 19  \n Median :2016-04-16 17:30:00   Median : 90   Median : 52   Median :223  \n Mean   :2016-04-16 17:30:00   Mean   :121   Mean   : 39   Mean   :150  \n 3rd Qu.:2017-06-09 02:15:00   3rd Qu.:225   3rd Qu.: 65   3rd Qu.:276  \n Max.   :2018-08-01 11:00:00   Max.   :661   Max.   :296   Max.   :328  \n A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\n Min.   :-73           Min.   :  0         Min.   :  0          Min.   :  0    \n 1st Qu.: 22           1st Qu.:  5         1st Qu.:  0          1st Qu.:  0    \n Median :196           Median :  6         Median : 45          Median : 40    \n Mean   :151           Mean   : 17         Mean   : 47          Mean   : 40    \n 3rd Qu.:277           3rd Qu.: 21         3rd Qu.: 81          3rd Qu.: 82    \n Max.   :366           Max.   :297         Max.   :226          Max.   :100    \n A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038 A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee\n Min.   :  -8     Min.   : -5      Min.   :  0          Min.   : -1    \n 1st Qu.:   0     1st Qu.:  0      1st Qu.:  0          1st Qu.: 10    \n Median :   0     Median :  3      Median :  0          Median :192    \n Mean   : 329     Mean   : 55      Mean   :  8          Mean   :125    \n 3rd Qu.: 544     3rd Qu.:105      3rd Qu.:  1          3rd Qu.:218    \n Max.   :4332     Max.   :772      Max.   :473          Max.   :356    \n \u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41\n Min.   :-75    \n 1st Qu.: -2    \n Median :  0    \n Mean   : 50    \n 3rd Qu.: 96    \n Max.   :225\n\n\n\nsummary(df_tagdata_31)\n\n\n\n\n   timestamp                      \u673a\u7ec4\u8d1f\u8377     \u673a\u7ec4\u603b\u7164\u91cf    \u4e00\u6b21\u98ce\u6e29\u5ea6 \n Min.   :2014-01-01 00:00:00   Min.   :  0   Min.   :  0   Min.   :  0  \n 1st Qu.:2015-02-23 08:45:00   1st Qu.:  0   1st Qu.:  0   1st Qu.: 13  \n Median :2016-04-16 17:30:00   Median :  0   Median :  0   Median : 23  \n Mean   :2016-04-16 17:30:00   Mean   : 71   Mean   : 19   Mean   : 95  \n 3rd Qu.:2017-06-09 02:15:00   3rd Qu.:207   3rd Qu.: 57   3rd Qu.:267  \n Max.   :2018-08-01 11:00:00   Max.   :334   Max.   :106   Max.   :323  \n A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\n Min.   :-71           Min.   : 0.0        Min.   :  0          Min.   :  0    \n 1st Qu.: 19           1st Qu.: 5.3        1st Qu.:  0          1st Qu.:  0    \n Median : 28           Median :21.0        Median :  0          Median :  0    \n Mean   :100           Mean   :13.5        Mean   : 31          Mean   : 24    \n 3rd Qu.:272           3rd Qu.:21.0        3rd Qu.: 70          3rd Qu.: 81    \n Max.   :330           Max.   :23.6        Max.   :213          Max.   :100    \n A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038 A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee\n Min.   :  -5     Min.   : -1      Min.   :-0.2         Min.   : -6    \n 1st Qu.:   0     1st Qu.:  0      1st Qu.: 0.0         1st Qu.: -5    \n Median :   0     Median :  0      Median : 0.4         Median :  0    \n Mean   : 231     Mean   : 40      Mean   : 0.5         Mean   : 66    \n 3rd Qu.: 580     3rd Qu.:105      3rd Qu.: 0.8         3rd Qu.:191    \n Max.   :2075     Max.   :880      Max.   : 9.3         Max.   :331    \n \u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41\n Min.   :-75    \n 1st Qu.:  0    \n Median :  0    \n Mean   : 32    \n 3rd Qu.: 94    \n Max.   :206\n\n\n\n\u5f02\u5e38\u6570\u636e\u5254\u9664\n\n\nfiltered_31_df \n- filter(df_tagdata_31,\u673a\u7ec4\u8d1f\u8377\n200 \n \u673a\u7ec4\u603b\u7164\u91cf\n50 \n \u4e00\u6b21\u98ce\u6e29\u5ea6\n250\n A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29\n250\n A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf\n50 \n A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\n75) \n\nfiltered_32_df \n- filter(df_tagdata_32,\u673a\u7ec4\u8d1f\u8377\n200 \n \u673a\u7ec4\u603b\u7164\u91cf\n50 \n \u4e00\u6b21\u98ce\u6e29\u5ea6\n250\n A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29\n250\n A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf\n50 \n A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\n75) \n\n\n\n\n32\u673a\u7ec4\u7684\u591a\u5143\u7ebf\u6027\u56de\u5f52\u6a21\u578b\n\n\nmodel_32 \n- lm(A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387 ~ \n                \u673a\u7ec4\u8d1f\u8377 +\n                #\u673a\u7ec4\u603b\u7164\u91cf +\n                \u4e00\u6b21\u98ce\u6e29\u5ea6 +\n                #A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 +\n                #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf +\n                A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf +\n                #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx +\n                A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx +\n                A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038 +\n                A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee \n                #\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41 \n              ,data = filtered_32_df)\n\n\n\n\n31\u673a\u7ec4\u7684\u591a\u5143\u7ebf\u6027\u56de\u5f52\u6a21\u578b\n\n\nmodel_31 \n- lm(A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387 ~ \n                 \u673a\u7ec4\u8d1f\u8377 +\n                 #\u673a\u7ec4\u603b\u7164\u91cf +\n                 \u4e00\u6b21\u98ce\u6e29\u5ea6 +\n                 #A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 +\n                 #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf +\n                 A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf +\n                 #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx +\n                 A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx +\n                 A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038 +\n                 A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee \n                 #\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41 \n               ,data = filtered_31_df)\n\n\n\n\n32\u673a\u7ec4\u6a21\u578b\u53ef\u89c6\u5316\n\n\npar(mfrow=c(2,2))\nplot(model_32)\n\n\n\n\n\n\n31\u673a\u7ec4\u6a21\u578b\u53ef\u89c6\u5316\n\n\npar(mfrow=c(2,2))\nplot(model_31)\n\n\n\n\n\n\n\u8ba1\u7b97\u673a\u7ec4\u6f5c\u80fd\u6570\u636e\n\n\ngenerate_qn \n- function(df_tagdata){\n  options(digits = 2)\n  ## \u8ba1\u7b97\u6c28\u6c2e\u6469\u5c14\u6bd4\n  df_tagdata_mr_new \n- mutate(df_tagdata,\n                             #\u6c28\u6c2e\u6469\u5c14\u6bd4=A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387/100 + 2.7*(A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf/A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx)\n                             \u6c28\u6c2e\u6469\u5c14\u6bd4=A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387/100 + 2.7*((A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038*17/22.4)/A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx))\n  # \u8ba1\u7b97\u6bcf\u4e2a\u5c0f\u65f6\u7684\u6f5c\u80fd\u6570\u636e\n  df_tagdata_qn \n- mutate(df_tagdata_mr_new,\n                             \u50ac\u5316\u5242\u6f5c\u80fd=0.5*log(\u6c28\u6c2e\u6469\u5c14\u6bd4/((\u6c28\u6c2e\u6469\u5c14\u6bd4-A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387/100)*(1-A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387/100))))\n  return(df_tagdata_qn)\n}\ndf_tagdata_32_qn \n- generate_qn(filtered_32_df)\ndf_tagdata_31_qn \n- generate_qn(filtered_31_df)\n\n\n\n\ntail(df_tagdata_32_qn)\n\n\n\n\n\n\ntimestamp\n\u673a\u7ec4\u8d1f\u8377\n\u673a\u7ec4\u603b\u7164\u91cf\n\u4e00\u6b21\u98ce\u6e29\u5ea6\nA\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29\nA\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf\nA\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf\nA\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\nA\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx\nA\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\nA\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038\nA\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee\n\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41\n\u6c28\u6c2e\u6469\u5c14\u6bd4\n\u50ac\u5316\u5242\u6f5c\u80fd\n\n\n\n    \n14576\n2018-08-01 06:00:00\n211                \n59                 \n294                \n295                \n5.5                \n77                 \n80                 \n570                \n114                \n0.74               \n242                \n 99                \n0.80               \n3.7                \n\n    \n14577\n2018-08-01 07:00:00\n211                \n59                 \n295                \n296                \n5.4                \n76                 \n79                 \n559                \n115                \n0.34               \n239                \n100                \n0.79               \n4.0                \n\n    \n14578\n2018-08-01 08:00:00\n211                \n59                 \n295                \n296                \n5.2                \n78                 \n80                 \n568                \n114                \n0.50               \n235                \n 99                \n0.80               \n3.9                \n\n    \n14579\n2018-08-01 09:00:00\n212                \n58                 \n295                \n296                \n5.3                \n78                 \n81                 \n566                \n108                \n0.43               \n235                \n 99                \n0.81               \n4.0                \n\n    \n14580\n2018-08-01 10:00:00\n212                \n58                 \n293                \n294                \n5.1                \n76                 \n81                 \n547                \n104                \n0.59               \n233                \n 99                \n0.81               \n3.8                \n\n    \n14581\n2018-08-01 11:00:00\n212                \n57                 \n291                \n292                \n5.3                \n77                 \n81                 \n550                \n107                \n0.75               \n232                \n 99                \n0.81               \n3.7                \n\n\n\n\n\n\n\n\u5b57\u6bb5\u8fd8\u539f\u82f1\u6587\u663e\u793a\n\n\ntag_names_cn \n- c('jzfh',\n                  'jzzm',\n                  'ycfwd',\n                  'A_kyqecfwd',\n                  'A_o2',\n                  'A_NH3',\n                  'A_xl',\n                  'A_rk_NOx',\n                  'A_ck_NOx',\n                  'A_ty_NH3',\n                  'A_yc',\n                  'A_yfjdl',\n                  'A_mr',\n                  'A_qn'\n                  )\nnames(df_tagdata_32_qn)[-1] \n- tag_names_cn\nnames(df_tagdata_31_qn)[-1] \n- tag_names_cn\nhead(df_tagdata_32_qn)\n\n\n\n\n\n\ntimestamp\njzfh\njzzm\nycfwd\nA_kyqecfwd\nA_o2\nA_NH3\nA_xl\nA_rk_NOx\nA_ck_NOx\nA_ty_NH3\nA_yc\nA_yfjdl\nA_mr\nA_qn\n\n\n\n    \n2014-01-01 00:00:00\n242                \n74                 \n281                \n284                \n5.9                \n110                \n82                 \n0                  \n131                \n0.0036             \n238                \n103                \nInf                \nNaN                \n\n    \n2014-01-01 01:00:00\n242                \n74                 \n280                \n282                \n5.6                \n110                \n82                 \n0                  \n129                \n0.0657             \n232                \n100                \nInf                \nNaN                \n\n    \n2014-01-01 02:00:00\n242                \n74                 \n282                \n283                \n5.5                \n109                \n82                 \n0                  \n128                \n0.7654             \n231                \n100                \nInf                \nNaN                \n\n    \n2014-01-01 03:00:00\n242                \n73                 \n283                \n285                \n5.4                \n108                \n82                 \n0                  \n130                \n0.8523             \n233                \n100                \nInf                \nNaN                \n\n    \n2014-01-01 04:00:00\n242                \n72                 \n285                \n288                \n5.4                \n107                \n82                 \n0                  \n132                \n0.4474             \n232                \n100                \nInf                \nNaN                \n\n    \n2014-01-01 05:00:00\n242                \n72                 \n287                \n289                \n5.4                \n106                \n82                 \n0                  \n133                \n0.0498             \n235                \n101                \nInf                \nNaN                \n\n\n\n\n\n\n\n32\u673a\u7ec4\u7684\u6f5c\u80fd\u6982\u7387\u5bc6\u5ea6\u5206\u5e03\u56fe\n\n\nggplot(df_tagdata_32_qn) + \n  geom_density(aes(x=A_qn)) \n\n\n\n\nWarning message:\n\u201cRemoved 2957 rows containing non-finite values (stat_density).\u201d\n\n\n\n\n\n32\u673a\u7ec4\u6f5c\u80fd\u5206\u5e03\u6563\u70b9\u56fe\u548c\u8d8b\u52bf\u7ebf\n\n\nggplot(df_tagdata_32_qn,aes(x=timestamp,y=A_qn)) + \n  geom_point(color = \nrosybrown2\n) +\n  geom_smooth(method=\nlm\n,color = \ndarkblue\n)\n\n\n\n\nWarning message:\n\u201cRemoved 2957 rows containing non-finite values (stat_smooth).\u201dWarning message:\n\u201cRemoved 2457 rows containing missing values (geom_point).\u201d\n\n\n\n\n\n31\u673a\u7ec4\u6f5c\u80fd\u6982\u7387\u5206\u5e03\u56fe\n\n\nggplot(df_tagdata_31_qn) + \n  geom_density(aes(x=A_qn))\n\n\n\n\nWarning message:\n\u201cRemoved 784 rows containing non-finite values (stat_density).\u201d\n\n\n\n\n\n31\u673a\u7ec4\u6f5c\u80fd\u5206\u5e03\u6563\u70b9\u56fe\u548c\u8d8b\u52bf\u7ebf\n\n\nggplot(df_tagdata_31_qn,aes(x=timestamp,y=A_qn)) + \n  geom_point(color = \nseagreen3\n) +\n  geom_smooth(method=\nlm\n,color = \ndarkred\n)\n\n\n\n\nWarning message:\n\u201cRemoved 784 rows containing non-finite values (stat_smooth).\u201dWarning message:\n\u201cRemoved 396 rows containing missing values (geom_point).\u201d\n\n\n\n\n\n\u5c06\u4e24\u4e2a\u673a\u7ec4\u7684\u6f5c\u80fd\u6570\u636e\u8fdb\u884c\u5408\u5e76\u663e\u793a\n\n\nggplot() + \n  geom_point(data = df_tagdata_32_qn,aes(x=timestamp,y=A_qn), color = \nrosybrown2\n,alpha=.4) + \n  geom_point(data = df_tagdata_31_qn,aes(x=timestamp,y=A_qn), color = \nseagreen3\n,alpha=.4) +\n  geom_smooth(data=df_tagdata_32_qn,method=\nlm\n,aes(x=timestamp,y=A_qn),color = \ndarkblue\n) +\n  geom_smooth(data=df_tagdata_31_qn,method=\nlm\n,aes(x=timestamp,y=A_qn),color = \ndarkred\n)\n\n\n\n\nWarning message:\n\u201cRemoved 2957 rows containing non-finite values (stat_smooth).\u201dWarning message:\n\u201cRemoved 784 rows containing non-finite values (stat_smooth).\u201dWarning message:\n\u201cRemoved 2457 rows containing missing values (geom_point).\u201dWarning message:\n\u201cRemoved 396 rows containing missing values (geom_point).\u201d", 
            "title": "regression"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_1", 
            "text": "", 
            "title": "\u706b\u7535\u8131\u785d\u6548\u7387\u56de\u5f52\u5206\u6790"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_2", 
            "text": "", 
            "title": "\u673a\u7ec4\u8131\u785d\u6d4b\u70b9\u6570\u636e \u76f8\u5173\u6027\u5206\u6790"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_3", 
            "text": "", 
            "title": "\u591a\u5143\u56de\u5f52\u5efa\u6a21"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#r", 
            "text": "library(opentsdbr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(magrittr)\nlibrary(corrplot)\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(TTR)  Loading required package: stringr\nLoading required package: httr\nLoading required package: rjson\nLoading required package: lubridate\n\nAttaching package: \u2018lubridate\u2019\n\nThe following object is masked from \u2018package:base\u2019:\n\n    date\n\nLoading required package: data.table\n\nAttaching package: \u2018data.table\u2019\n\nThe following objects are masked from \u2018package:lubridate\u2019:\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n\n\nAttaching package: \u2018dplyr\u2019\n\nThe following objects are masked from \u2018package:data.table\u2019:\n\n    between, first, last\n\nThe following objects are masked from \u2018package:lubridate\u2019:\n\n    intersect, setdiff, union\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    filter, lag\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    intersect, setdiff, setequal, union\n\n\nAttaching package: \u2018magrittr\u2019\n\nThe following object is masked from \u2018package:tidyr\u2019:\n\n    extract\n\ncorrplot 0.84 loaded\n\nAttaching package: \u2018reshape2\u2019\n\nThe following object is masked from \u2018package:tidyr\u2019:\n\n    smiths\n\nThe following objects are masked from \u2018package:data.table\u2019:\n\n    dcast, melt", 
            "title": "\u52a0\u8f7dR\u76f8\u5173\u5305"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_4", 
            "text": "inter  - interval(ymd_hms( 2014-01-01 00:00:00 ), ymd_hms( 2018-08-01 11:59:59 ))", 
            "title": "\u6307\u5b9a\u5206\u6790\u65f6\u6bb5"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#32a", 
            "text": "tagcodes_32  - as.list(c(\n  '08ksci008_2a', #\u673a\u7ec4\u8d1f\u8377\n  'unitcoalflo_2a', #\u673a\u7ec4\u603b\u7164\u91cf\n  #'2coalbsavg_c', #\u53d1\u7535\u7164\u8017\n  '08fsaeu60c_2a', #\u4e00\u6b21\u98ce\u6e29\u5ea6\n  '08frate76d_2a', #A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29\n  '08hsa10cq101b_2a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf\n  #'08ascr_nox_set_2a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\u8bbe\u5b9a\n  #'08ascr_xl_set_2a', #A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\u8bbe\u5b9a\n  '08bakai001_2a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf\n  '08xiaolva_2a', #A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\n  '08bakai008_2a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx\n  '08bakai006_2a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\n  '08hsa10cq105_2a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038\n  '08hsd10dp101_2a', #A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee\n  #'33hta00cq004_t1a', #\u51fa\u53e3\u70df\u5c18\u6d53\u5ea6\n  '08ftaan001xb13_2a' #\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41\n  #'33fgd2rtu-ao3_t1a' #\u5165\u53e3\u70df\u6c14\u91cf\n))", 
            "title": "\u53c2\u8003\u4e1a\u52a1\u4e0a\u5b9a\u4e49\u768432\u673a\u7ec4\u91cd\u70b9\u6d4b\u70b9(A\u6d4b)"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#31a", 
            "text": "tagcodes_31  - as.list(c(\n  '07gevji001_c18_1a', #\u673a\u7ec4\u8d1f\u8377\n  'unitcoalflo_1a', #\u673a\u7ec4\u603b\u7164\u91cf\n  #'1coalbsavg_c', #\u53d1\u7535\u7164\u8017\n  '07fsaeu60c_1a', #\u4e00\u6b21\u98ce\u6e29\u5ea6\n  '07frate76d_1a', #A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29\n  '07hsa10cq101b_1a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf\n  #'07ascr_nox_set_1a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\u8bbe\u5b9a\n  #'07ascr_xl_set_1a', #A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\u8bbe\u5b9a\n  '07bakai001_1a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf\n  '07xiaolva_1a', #A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\n  '07bakai008_1a', #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx\n  '07bakai006_1a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\n  '07hsa10cq105_1a', #A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038\n  '07hsd10dp101_1a', #A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee\n  #'33hta00cq004_t1a', #\u51fa\u53e3\u70df\u5c18\u6d53\u5ea6\n  '07ftaan001xb13_1a' #\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41\n  #'33fgd2rtu-ao3_t1a' #\u5165\u53e3\u70df\u6c14\u91cf\n))", 
            "title": "\u53c2\u8003\u4e1a\u52a1\u4e0a\u5b9a\u4e49\u768431\u673a\u7ec4\u91cd\u70b9\u6d4b\u70b9(A\u6d4b)"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_5", 
            "text": "get_tag_info_from_opentsdb  - function(code,ag,ds,hs='1.85.6.157',port=14242){\n  result  - try(tsd_get(metric = code,inter,agg=ag,hostname = hs ,port=port,downsample = ds))\n  if ('try-error' %in% class(result)) {\n    message( \u6d4b\u70b9\uff1a ,code,  \u65e0\u6570\u636e )\n    # \u90e8\u5206\u6d4b\u70b9\u6570\u636e\u4e3a\u7a7a\n    return(NULL)\n  }else{\n    # \u884c\u5217\u8f6c\u6362\n    tmp  - dcast(result[,1:3],timestamp~metric)\n    return(tmp)\n  }\n}", 
            "title": "\u5b9a\u4e49\u83b7\u53d6\u6d4b\u70b9\u6570\u636e\u51fd\u6570"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#32", 
            "text": "tagdata_32  - lapply(tagcodes_32,\n                     get_tag_info_from_opentsdb,\n                     ag='zimsum',\n                     ds  - '1h-avg-zero',\n                     hs='cdh-2')  No encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nWarning message in `[ -.data.frame`(`*tmp*`, , tag_names, value = list(structure(1L, .Label = \"jydc\", class = \"factor\"), :\n\u201cprovided 40164 variables to replace 1 variables\u201d", 
            "title": "\u8bfb\u53d632\u673a\u7ec4\u6d4b\u70b9\u6570\u636e"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#31", 
            "text": "tagdata_31  - lapply(tagcodes_31,\n                     get_tag_info_from_opentsdb,\n                     ag='zimsum',\n                     ds  - '1h-avg-zero',\n                     hs='cdh-2')  No encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nWarning message in `[ -.data.frame`(`*tmp*`, , tag_names, value = list(structure(1L, .Label = \"jydc\", class = \"factor\"), :\n\u201cprovided 40164 variables to replace 1 variables\u201dNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nWarning message in `[ -.data.frame`(`*tmp*`, , tag_names, value = list(structure(1L, .Label = \"jydc\", class = \"factor\"), :\n\u201cprovided 40164 variables to replace 1 variables\u201dNo encoding supplied: defaulting to UTF-8.\nWarning message in `[ -.data.frame`(`*tmp*`, , tag_names, value = list(structure(1L, .Label = \"jydc\", class = \"factor\"), :\n\u201cprovided 40164 variables to replace 1 variables\u201dNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.", 
            "title": "\u8bfb\u53d631\u673a\u7ec4\u6d4b\u70b9\u6570\u636e"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#opentsdb-dataframe", 
            "text": "df_tagdata_32  - reshape::merge_recurse(tagdata_32);\ndf_tagdata_31  - reshape::merge_recurse(tagdata_31)", 
            "title": "\u5c06\u4eceopentsdb\u4e2d\u7684\u6d4b\u70b9\u5217\u8868\u6570\u636e \u8f6c\u5316\u6210 dataframe \u6570\u636e\u6846\u683c\u5f0f"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_6", 
            "text": "tag_names_cn  - c('\u673a\u7ec4\u8d1f\u8377',\n                  '\u673a\u7ec4\u603b\u7164\u91cf',\n                  #'\u53d1\u7535\u7164\u8017',\n                  '\u4e00\u6b21\u98ce\u6e29\u5ea6',\n                  'A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29',\n                  'A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf',\n                  #'A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx\u8bbe\u5b9a',\n                  #'A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\u8bbe\u5b9a',\n                  'A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf',\n                  'A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387',\n                  'A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx',\n                  'A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx',\n                  'A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038',\n                  'A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee',\n                  #'\u51fa\u53e3\u70df\u5c18\u6d53\u5ea6',\n                  '\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41'\n                  #,'\u5165\u53e3\u70df\u6c14\u91cf'\n                  )\nnames(df_tagdata_32)[-1]  - tag_names_cn\nnames(df_tagdata_31)[-1]  - tag_names_cn", 
            "title": "\u5c06\u6d4b\u70b9\u7f16\u7801\u8f6c\u6362\u6210\u6d4b\u70b9\u540d\u79f0"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_7", 
            "text": "summary(df_tagdata_32)     timestamp                      \u673a\u7ec4\u8d1f\u8377     \u673a\u7ec4\u603b\u7164\u91cf    \u4e00\u6b21\u98ce\u6e29\u5ea6 \n Min.   :2014-01-01 00:00:00   Min.   : -1   Min.   :  0   Min.   :  0  \n 1st Qu.:2015-02-23 08:45:00   1st Qu.:  0   1st Qu.:  0   1st Qu.: 19  \n Median :2016-04-16 17:30:00   Median : 90   Median : 52   Median :223  \n Mean   :2016-04-16 17:30:00   Mean   :121   Mean   : 39   Mean   :150  \n 3rd Qu.:2017-06-09 02:15:00   3rd Qu.:225   3rd Qu.: 65   3rd Qu.:276  \n Max.   :2018-08-01 11:00:00   Max.   :661   Max.   :296   Max.   :328  \n A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\n Min.   :-73           Min.   :  0         Min.   :  0          Min.   :  0    \n 1st Qu.: 22           1st Qu.:  5         1st Qu.:  0          1st Qu.:  0    \n Median :196           Median :  6         Median : 45          Median : 40    \n Mean   :151           Mean   : 17         Mean   : 47          Mean   : 40    \n 3rd Qu.:277           3rd Qu.: 21         3rd Qu.: 81          3rd Qu.: 82    \n Max.   :366           Max.   :297         Max.   :226          Max.   :100    \n A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038 A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee\n Min.   :  -8     Min.   : -5      Min.   :  0          Min.   : -1    \n 1st Qu.:   0     1st Qu.:  0      1st Qu.:  0          1st Qu.: 10    \n Median :   0     Median :  3      Median :  0          Median :192    \n Mean   : 329     Mean   : 55      Mean   :  8          Mean   :125    \n 3rd Qu.: 544     3rd Qu.:105      3rd Qu.:  1          3rd Qu.:218    \n Max.   :4332     Max.   :772      Max.   :473          Max.   :356    \n \u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41\n Min.   :-75    \n 1st Qu.: -2    \n Median :  0    \n Mean   : 50    \n 3rd Qu.: 96    \n Max.   :225  summary(df_tagdata_31)     timestamp                      \u673a\u7ec4\u8d1f\u8377     \u673a\u7ec4\u603b\u7164\u91cf    \u4e00\u6b21\u98ce\u6e29\u5ea6 \n Min.   :2014-01-01 00:00:00   Min.   :  0   Min.   :  0   Min.   :  0  \n 1st Qu.:2015-02-23 08:45:00   1st Qu.:  0   1st Qu.:  0   1st Qu.: 13  \n Median :2016-04-16 17:30:00   Median :  0   Median :  0   Median : 23  \n Mean   :2016-04-16 17:30:00   Mean   : 71   Mean   : 19   Mean   : 95  \n 3rd Qu.:2017-06-09 02:15:00   3rd Qu.:207   3rd Qu.: 57   3rd Qu.:267  \n Max.   :2018-08-01 11:00:00   Max.   :334   Max.   :106   Max.   :323  \n A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387\n Min.   :-71           Min.   : 0.0        Min.   :  0          Min.   :  0    \n 1st Qu.: 19           1st Qu.: 5.3        1st Qu.:  0          1st Qu.:  0    \n Median : 28           Median :21.0        Median :  0          Median :  0    \n Mean   :100           Mean   :13.5        Mean   : 31          Mean   : 24    \n 3rd Qu.:272           3rd Qu.:21.0        3rd Qu.: 70          3rd Qu.: 81    \n Max.   :330           Max.   :23.6        Max.   :213          Max.   :100    \n A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038 A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee\n Min.   :  -5     Min.   : -1      Min.   :-0.2         Min.   : -6    \n 1st Qu.:   0     1st Qu.:  0      1st Qu.: 0.0         1st Qu.: -5    \n Median :   0     Median :  0      Median : 0.4         Median :  0    \n Mean   : 231     Mean   : 40      Mean   : 0.5         Mean   : 66    \n 3rd Qu.: 580     3rd Qu.:105      3rd Qu.: 0.8         3rd Qu.:191    \n Max.   :2075     Max.   :880      Max.   : 9.3         Max.   :331    \n \u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41\n Min.   :-75    \n 1st Qu.:  0    \n Median :  0    \n Mean   : 32    \n 3rd Qu.: 94    \n Max.   :206", 
            "title": "\u6570\u636e\u6846\u63cf\u8ff0\u6027\u7edf\u8ba1"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_8", 
            "text": "filtered_31_df  - filter(df_tagdata_31,\u673a\u7ec4\u8d1f\u8377 200   \u673a\u7ec4\u603b\u7164\u91cf 50   \u4e00\u6b21\u98ce\u6e29\u5ea6 250  A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 250  A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf 50   A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387 75) \n\nfiltered_32_df  - filter(df_tagdata_32,\u673a\u7ec4\u8d1f\u8377 200   \u673a\u7ec4\u603b\u7164\u91cf 50   \u4e00\u6b21\u98ce\u6e29\u5ea6 250  A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 250  A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf 50   A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387 75)", 
            "title": "\u5f02\u5e38\u6570\u636e\u5254\u9664"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#32_1", 
            "text": "model_32  - lm(A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387 ~ \n                \u673a\u7ec4\u8d1f\u8377 +\n                #\u673a\u7ec4\u603b\u7164\u91cf +\n                \u4e00\u6b21\u98ce\u6e29\u5ea6 +\n                #A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 +\n                #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf +\n                A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf +\n                #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx +\n                A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx +\n                A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038 +\n                A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee \n                #\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41 \n              ,data = filtered_32_df)", 
            "title": "32\u673a\u7ec4\u7684\u591a\u5143\u7ebf\u6027\u56de\u5f52\u6a21\u578b"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#31_1", 
            "text": "model_31  - lm(A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387 ~ \n                 \u673a\u7ec4\u8d1f\u8377 +\n                 #\u673a\u7ec4\u603b\u7164\u91cf +\n                 \u4e00\u6b21\u98ce\u6e29\u5ea6 +\n                 #A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 +\n                 #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf +\n                 A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf +\n                 #A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx +\n                 A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx +\n                 A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038 +\n                 A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee \n                 #\u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41 \n               ,data = filtered_31_df)", 
            "title": "31\u673a\u7ec4\u7684\u591a\u5143\u7ebf\u6027\u56de\u5f52\u6a21\u578b"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#32_2", 
            "text": "par(mfrow=c(2,2))\nplot(model_32)", 
            "title": "32\u673a\u7ec4\u6a21\u578b\u53ef\u89c6\u5316"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#31_2", 
            "text": "par(mfrow=c(2,2))\nplot(model_31)", 
            "title": "31\u673a\u7ec4\u6a21\u578b\u53ef\u89c6\u5316"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_9", 
            "text": "generate_qn  - function(df_tagdata){\n  options(digits = 2)\n  ## \u8ba1\u7b97\u6c28\u6c2e\u6469\u5c14\u6bd4\n  df_tagdata_mr_new  - mutate(df_tagdata,\n                             #\u6c28\u6c2e\u6469\u5c14\u6bd4=A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387/100 + 2.7*(A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf/A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx)\n                             \u6c28\u6c2e\u6469\u5c14\u6bd4=A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387/100 + 2.7*((A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038*17/22.4)/A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx))\n  # \u8ba1\u7b97\u6bcf\u4e2a\u5c0f\u65f6\u7684\u6f5c\u80fd\u6570\u636e\n  df_tagdata_qn  - mutate(df_tagdata_mr_new,\n                             \u50ac\u5316\u5242\u6f5c\u80fd=0.5*log(\u6c28\u6c2e\u6469\u5c14\u6bd4/((\u6c28\u6c2e\u6469\u5c14\u6bd4-A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387/100)*(1-A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387/100))))\n  return(df_tagdata_qn)\n}\ndf_tagdata_32_qn  - generate_qn(filtered_32_df)\ndf_tagdata_31_qn  - generate_qn(filtered_31_df)  tail(df_tagdata_32_qn)   timestamp \u673a\u7ec4\u8d1f\u8377 \u673a\u7ec4\u603b\u7164\u91cf \u4e00\u6b21\u98ce\u6e29\u5ea6 A\u4fa7\u7a7a\u9884\u5668\u51fa\u53e3\u4e8c\u6b21\u98ce\u6e29 A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3O2\u542b\u91cf A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NH3\u6d41\u91cf A\u4fa7\u53cd\u5e94\u5668\u8131\u785d\u7387 A\u4fa7\u53cd\u5e94\u5668\u5165\u53e3NOx A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NOx A\u4fa7\u53cd\u5e94\u5668\u51fa\u53e3NH3\u9003\u9038 A\u4fa7\u50ac\u5316\u5242\u5c42\u538b\u5dee \u5f15\u98ce\u673aA\u7535\u673a\u7535\u6d41 \u6c28\u6c2e\u6469\u5c14\u6bd4 \u50ac\u5316\u5242\u6f5c\u80fd  \n     14576 2018-08-01 06:00:00 211                 59                  294                 295                 5.5                 77                  80                  570                 114                 0.74                242                  99                 0.80                3.7                 \n     14577 2018-08-01 07:00:00 211                 59                  295                 296                 5.4                 76                  79                  559                 115                 0.34                239                 100                 0.79                4.0                 \n     14578 2018-08-01 08:00:00 211                 59                  295                 296                 5.2                 78                  80                  568                 114                 0.50                235                  99                 0.80                3.9                 \n     14579 2018-08-01 09:00:00 212                 58                  295                 296                 5.3                 78                  81                  566                 108                 0.43                235                  99                 0.81                4.0                 \n     14580 2018-08-01 10:00:00 212                 58                  293                 294                 5.1                 76                  81                  547                 104                 0.59                233                  99                 0.81                3.8                 \n     14581 2018-08-01 11:00:00 212                 57                  291                 292                 5.3                 77                  81                  550                 107                 0.75                232                  99                 0.81                3.7", 
            "title": "\u8ba1\u7b97\u673a\u7ec4\u6f5c\u80fd\u6570\u636e"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_10", 
            "text": "tag_names_cn  - c('jzfh',\n                  'jzzm',\n                  'ycfwd',\n                  'A_kyqecfwd',\n                  'A_o2',\n                  'A_NH3',\n                  'A_xl',\n                  'A_rk_NOx',\n                  'A_ck_NOx',\n                  'A_ty_NH3',\n                  'A_yc',\n                  'A_yfjdl',\n                  'A_mr',\n                  'A_qn'\n                  )\nnames(df_tagdata_32_qn)[-1]  - tag_names_cn\nnames(df_tagdata_31_qn)[-1]  - tag_names_cn\nhead(df_tagdata_32_qn)   timestamp jzfh jzzm ycfwd A_kyqecfwd A_o2 A_NH3 A_xl A_rk_NOx A_ck_NOx A_ty_NH3 A_yc A_yfjdl A_mr A_qn  \n     2014-01-01 00:00:00 242                 74                  281                 284                 5.9                 110                 82                  0                   131                 0.0036              238                 103                 Inf                 NaN                 \n     2014-01-01 01:00:00 242                 74                  280                 282                 5.6                 110                 82                  0                   129                 0.0657              232                 100                 Inf                 NaN                 \n     2014-01-01 02:00:00 242                 74                  282                 283                 5.5                 109                 82                  0                   128                 0.7654              231                 100                 Inf                 NaN                 \n     2014-01-01 03:00:00 242                 73                  283                 285                 5.4                 108                 82                  0                   130                 0.8523              233                 100                 Inf                 NaN                 \n     2014-01-01 04:00:00 242                 72                  285                 288                 5.4                 107                 82                  0                   132                 0.4474              232                 100                 Inf                 NaN                 \n     2014-01-01 05:00:00 242                 72                  287                 289                 5.4                 106                 82                  0                   133                 0.0498              235                 101                 Inf                 NaN", 
            "title": "\u5b57\u6bb5\u8fd8\u539f\u82f1\u6587\u663e\u793a"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#32_3", 
            "text": "ggplot(df_tagdata_32_qn) + \n  geom_density(aes(x=A_qn))   Warning message:\n\u201cRemoved 2957 rows containing non-finite values (stat_density).\u201d", 
            "title": "32\u673a\u7ec4\u7684\u6f5c\u80fd\u6982\u7387\u5bc6\u5ea6\u5206\u5e03\u56fe"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#32_4", 
            "text": "ggplot(df_tagdata_32_qn,aes(x=timestamp,y=A_qn)) + \n  geom_point(color =  rosybrown2 ) +\n  geom_smooth(method= lm ,color =  darkblue )  Warning message:\n\u201cRemoved 2957 rows containing non-finite values (stat_smooth).\u201dWarning message:\n\u201cRemoved 2457 rows containing missing values (geom_point).\u201d", 
            "title": "32\u673a\u7ec4\u6f5c\u80fd\u5206\u5e03\u6563\u70b9\u56fe\u548c\u8d8b\u52bf\u7ebf"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#31_3", 
            "text": "ggplot(df_tagdata_31_qn) + \n  geom_density(aes(x=A_qn))  Warning message:\n\u201cRemoved 784 rows containing non-finite values (stat_density).\u201d", 
            "title": "31\u673a\u7ec4\u6f5c\u80fd\u6982\u7387\u5206\u5e03\u56fe"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#31_4", 
            "text": "ggplot(df_tagdata_31_qn,aes(x=timestamp,y=A_qn)) + \n  geom_point(color =  seagreen3 ) +\n  geom_smooth(method= lm ,color =  darkred )  Warning message:\n\u201cRemoved 784 rows containing non-finite values (stat_smooth).\u201dWarning message:\n\u201cRemoved 396 rows containing missing values (geom_point).\u201d", 
            "title": "31\u673a\u7ec4\u6f5c\u80fd\u5206\u5e03\u6563\u70b9\u56fe\u548c\u8d8b\u52bf\u7ebf"
        }, 
        {
            "location": "/\u706b\u7535\u8131\u785d\u56de\u5f52\u5206\u6790-R/#_11", 
            "text": "ggplot() + \n  geom_point(data = df_tagdata_32_qn,aes(x=timestamp,y=A_qn), color =  rosybrown2 ,alpha=.4) + \n  geom_point(data = df_tagdata_31_qn,aes(x=timestamp,y=A_qn), color =  seagreen3 ,alpha=.4) +\n  geom_smooth(data=df_tagdata_32_qn,method= lm ,aes(x=timestamp,y=A_qn),color =  darkblue ) +\n  geom_smooth(data=df_tagdata_31_qn,method= lm ,aes(x=timestamp,y=A_qn),color =  darkred )  Warning message:\n\u201cRemoved 2957 rows containing non-finite values (stat_smooth).\u201dWarning message:\n\u201cRemoved 784 rows containing non-finite values (stat_smooth).\u201dWarning message:\n\u201cRemoved 2457 rows containing missing values (geom_point).\u201dWarning message:\n\u201cRemoved 396 rows containing missing values (geom_point).\u201d", 
            "title": "\u5c06\u4e24\u4e2a\u673a\u7ec4\u7684\u6f5c\u80fd\u6570\u636e\u8fdb\u884c\u5408\u5e76\u663e\u793a"
        }
    ]
}